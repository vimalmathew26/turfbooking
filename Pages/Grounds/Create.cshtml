@page
@model turfbooking.Pages.Grounds.CreateModel
@{
    ViewData["Title"] = "Add New Ground";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-lg border-0 rounded-4">
                <div class="card-header bg-success text-white rounded-top-4" style="background-color: white;">
                    <h3 class="mb-0">Add New Ground</h3>
                </div>

                <div class="card-body p-4">
                    <form method="post" enctype="multipart/form-data" asp-page-handler="">
                        @Html.AntiForgeryToken()

                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                        <div class="mb-4 text-center">
                            <label class="form-label d-block fw-semibold">Upload Ground Photo</label>
                            <div class="border rounded-4 p-3 bg-light shadow-sm" style="max-width: 300px; margin: auto;">
                                <img id="photoPreview" src="/images/placeholder.png" class="img-fluid rounded mb-2" style="height: 200px; object-fit: cover;" />
                                <input asp-for="Photo" type="file" class="form-control" accept="image/*" onchange="previewImage(event)" />
                                <span asp-validation-for="Photo" class="text-danger small d-block mt-1"></span>
                            </div>
                        </div>

                        <div class="row g-3">
                            <div class="col-md-6">
                                <label asp-for="Ground.GroundName" class="form-label fw-semibold"></label>
                                <input asp-for="Ground.GroundName" class="form-control rounded-3" placeholder="e.g. Sunrise Turf" />
                                <span asp-validation-for="Ground.GroundName" class="text-danger small"></span>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="Ground.Location" class="form-label fw-semibold"></label>
                                <input asp-for="Ground.Location" class="form-control rounded-3" placeholder="e.g. Kochi, Kerala" />
                                <span asp-validation-for="Ground.Location" class="text-danger small"></span>
                            </div>
                        </div>

                        <div class="mt-3">
                            <label asp-for="Ground.Description" class="form-label fw-semibold"></label>
                            <textarea asp-for="Ground.Description" class="form-control rounded-3" rows="3" placeholder="Write a short description..."></textarea>
                            <span asp-validation-for="Ground.Description" class="text-danger small"></span>
                        </div>

                        @* <div class="row g-3 mt-1">
                            <div class="col-md-6">
                                <label asp-for="Ground.PricePerHour" class="form-label fw-semibold"></label>
                                <input asp-for="Ground.PricePerHour" class="form-control rounded-3" placeholder="e.g. 500" />
                                <span asp-validation-for="Ground.PricePerHour" class="text-danger small"></span>
                            </div>
                        </div> *@

                        <div class="form-check form-switch mt-4">
                            <input asp-for="Ground.IsActive" class="form-check-input" type="checkbox" role="switch" />
                            <label asp-for="Ground.IsActive" class="form-check-label fw-semibold">Active Ground</label>
                        </div>
                        <div id="courtsContainer">
                            <div class="court-group border rounded-4 p-3 mb-3" data-index="0">
                                <h5 class="fw-semibold d-flex justify-content-between align-items-center">
                                    Court 1
                                    <!-- No remove button for the first court -->
                                </h5>
                                <div class="row g-2 align-items-end">
                                    <!-- Sport Dropdown -->
                                    <div class="col-md-3">
                                        <label class="form-label">Select Sport</label>
                                        <div class="position-relative">
                                            <select class="form-select court-sport-select" onchange="handleSportSelectChange(this)" required>
                                                <option value="">-- Choose Sport --</option>
                                                <option value="Football">Football</option>
                                                <option value="Cricket">Cricket</option>
                                                <option value="Badminton">Badminton</option>
                                                <option value="Volleyball">Volleyball</option>
                                                <option value="Tennis">Tennis</option>
                                                <option value="Basketball">Basketball</option>
                                                <option value="Hockey">Hockey</option>
                                                <option value="Kabaddi">Kabaddi</option>
                                                <option value="Table Tennis">Table Tennis</option>
                                                <option value="Kho-Kho">Kho-Kho</option>
                                                <option value="__other__">Other</option>
                                            </select>
                                            <input type="text" class="form-control mt-2 d-none court-custom-sport" placeholder="Enter custom sport" />
                                            <input type="hidden" name="Courts[0].Name" class="court-sport-hidden" />
                                        </div>
                                    </div>

                                    <!-- Duration -->
                                    <div class="col-md-3">
                                        <label class="form-label">Duration</label>
                                        <div class="d-flex gap-2">
                                            <div class="input-group" style="width: 100px;">
                                                <input name="Courts[0].DurationHours" type="number" min="0" max="12" class="form-control text-center" placeholder="hrs" value="1" required />
                                                <span class="input-group-text">h</span>
                                            </div>
                                            <div class="input-group" style="width: 100px;">
                                                <input name="Courts[0].DurationMinutes" type="number" min="0" max="59" class="form-control text-center" placeholder="mins" value="0" required />
                                                <span class="input-group-text">m</span>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Start Time -->
                                    <div class="col-md-2">
                                        <label class="form-label">Start Time</label>
                                        <input name="Courts[0].StartTime" type="time" class="form-control" required />
                                    </div>

                                    <!-- End Time -->
                                    <div class="col-md-2">
                                        <label class="form-label">End Time</label>
                                        <input name="Courts[0].EndTime" type="time" class="form-control" required />
                                    </div>

                                    <!-- Price Per Hour -->
                                    <div class="col-md-2">
                                        <label class="form-label">Price Per Hour (₹)</label>
                                        <input name="Courts[0].PricePerHour" type="number" class="form-control rounded-3" placeholder="e.g. 500" required />
                                    </div>
                                </div>

                            </div>
                        </div>
                           
                        <button type="button" class="btn btn-outline-primary mt-2" onclick="addCourt()">+ Add Court</button>


                        <div class="text-end mt-4">
                            <button type="submit" class="btn btn-primary rounded-pill px-4 shadow-sm">
                                <i class="bi bi-check-circle me-1"></i> Add Ground
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        body {
            margin: 0;
            padding: 0;
            background: url('/images/turfbg.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: 'Segoe UI', sans-serif;
        }

        .form-container {
            padding: 10px;
            border-radius: 20px;
            background-color: rgba(255, 255, 255, 0.85);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
        }

        .form-label {
            font-weight: 600;
        }

        .form-control {
            border-radius: 10px;
        }

        .btn-purple {
            background-color: white ;
            color: white;
            border: none;
        }

            .btn-purple:hover {
                background-color: white;
            }


        .minutes-box {
            width: 60px !important;
            flex: 0 0 auto !important;
        }

        .hours-box {
            width: 60px !important;
            flex: 0 0 auto !important;
        }
    </style>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function previewImage(event) {
            const reader = new FileReader();
            reader.onload = function () {
                const output = document.getElementById('photoPreview');
                output.src = reader.result;
            };
            reader.readAsDataURL(event.target.files[0]);
        }
                       function updateSupportedSports() {
            const checkboxes = document.querySelectorAll('#sportsCheckboxes input[type="checkbox"]');
            const selected = [];

            checkboxes.forEach(cb => {
                if (cb.checked) {
                    selected.push(cb.value);
                }
            });

            const result = selected.join(", ");
            document.getElementById("SupportedSports").value = result;
            document.getElementById("sportsPreview").value = result;

            const clearBtn = document.getElementById("clearSportsBtn");
            if (selected.length === 0) {
                clearBtn.classList.add("d-none");
            } else {
                clearBtn.classList.remove("d-none");
            }
        }

        function clearAllSports() {
            const checkboxes = document.querySelectorAll('#sportsCheckboxes input[type="checkbox"]');
            checkboxes.forEach(cb => cb.checked = false);
            updateSupportedSports(); 
        }


        function addCustomSport() {
            const input = document.getElementById("customSportInput");
            const sport = input.value.trim();

            if (!sport) return;

            const existing = Array.from(document.querySelectorAll('#sportsCheckboxes input')).some(cb => cb.value.toLowerCase() === sport.toLowerCase());
            if (existing) {
                alert("Sport already exists.");
                return;
            }

            const container = document.getElementById("sportsCheckboxes");
            const id = "sport_" + sport.replace(/\s+/g, "_");

            const div = document.createElement("div");
            div.className = "form-check form-check-inline";
            div.innerHTML = `
                <input class="form-check-input" type="checkbox" id="${id}" value="${sport}" onchange="updateSupportedSports()" checked />
                <label class="form-check-label" for="${id}">${sport}</label>
            `;

            container.appendChild(div);
            input.value = "";
            updateSupportedSports();
        }

        let courtIndex = 1;

                                       function addCourt() {
            const container = document.getElementById("courtsContainer");

            const div = document.createElement("div");
            div.className = "court-group border rounded-4 p-3 mb-3 position-relative";

            const index = document.querySelectorAll('.court-group').length;

                                 div.innerHTML = `
            <h5 class="fw-semibold">Court ${index + 1}</h5>
            <button type="button" class="btn-close position-absolute top-0 end-0 m-3" onclick="removeCourt(this)" aria-label="Remove"></button>
            <div class="row g-2 align-items-end">
                <!-- Sport -->
                <div class="col-md-3">
                    <label class="form-label">Select Sport</label>
                    <div class="position-relative">
                        <select class="form-select court-sport-select" onchange="handleSportSelectChange(this)" required>
                            <option value="">-- Choose Sport --</option>
                            <option value="Football">Football</option>
                            <option value="Cricket">Cricket</option>
                            <option value="Badminton">Badminton</option>
                            <option value="Volleyball">Volleyball</option>
                            <option value="Tennis">Tennis</option>
                            <option value="Basketball">Basketball</option>
                            <option value="Hockey">Hockey</option>
                            <option value="Kabaddi">Kabaddi</option>
                            <option value="Table Tennis">Table Tennis</option>
                            <option value="Kho-Kho">Kho-Kho</option>
                            <option value="__other__">Other</option>
                        </select>
                        <input type="hidden" name="Courts[${index}].Name" class="court-sport-hidden" value="" />
                        <input type="text" class="form-control mt-2 d-none court-custom-sport" placeholder="Enter custom sport" />
                    </div>
                </div>

                <!-- Duration -->
                <div class="col-md-3">
                    <label class="form-label">Duration</label>
                    <div class="d-flex gap-2">
                        <div class="input-group" style="width: 100px;">
                            <input name="Courts[${index}].DurationHours" type="number" min="0" max="12" class="form-control text-center" placeholder="hrs" value="1" required />
                            <span class="input-group-text">h</span>
                        </div>
                        <div class="input-group" style="width: 100px;">
                            <input name="Courts[${index}].DurationMinutes" type="number" min="0" max="59" class="form-control text-center" placeholder="mins" value="0" required />
                            <span class="input-group-text">m</span>
                        </div>
                    </div>
                </div>

                <!-- Start Time -->
                <div class="col-md-2">
                    <label class="form-label">Start Time</label>
                    <input name="Courts[${index}].StartTime" type="time" class="form-control" required />
                </div>

                <!-- End Time -->
                <div class="col-md-2">
                    <label class="form-label">End Time</label>
                    <input name="Courts[${index}].EndTime" type="time" class="form-control" required />
                </div>

                <!-- Price Per Hour -->
                <div class="col-md-2">
                    <label class="form-label">Price Per Hour (₹)</label>
                    <input name="Courts[${index}].PricePerHour" type="number" class="form-control rounded-3" placeholder="e.g. 500" required />
                </div>
            </div>
        `;

            container.appendChild(div);
        }


                       function reindexCourts() {
            const courtGroups = document.querySelectorAll('#courtsContainer .court-group');

            courtGroups.forEach((group, index) => {
                group.querySelector('h5').innerText = `Court ${index + 1}`;

                // Reassign hidden input name
                const hiddenInput = group.querySelector('.court-sport-hidden');
                if (hiddenInput) hiddenInput.name = `Courts[${index}].Name`;

                // Reassign duration and time input names
                const hoursInput = group.querySelector('input[name$=".DurationHours"]');
                const minutesInput = group.querySelector('input[name$=".DurationMinutes"]');
                const startTimeInput = group.querySelector('input[name$=".StartTime"]');
                const endTimeInput = group.querySelector('input[name$=".EndTime"]');

                // Reassign price of courts

                const priceInput = group.querySelector('input[name$=".PricePerHour"]');

                if (hoursInput) hoursInput.name = `Courts[${index}].DurationHours`;
                if (minutesInput) minutesInput.name = `Courts[${index}].DurationMinutes`;
                if (startTimeInput) startTimeInput.name = `Courts[${index}].StartTime`;
                if (endTimeInput) endTimeInput.name = `Courts[${index}].EndTime`;
                if (priceInput) priceInput.name = `Courts[${index}].PricePerHour`;
            });
        }




                function removeCourt(button) {
            const courtGroups = document.querySelectorAll('.court-group');
            if (courtGroups.length <= 1) {
                alert("At least one court is required.");
                return;
            }
            const courtDiv = button.closest('.court-group');
            courtDiv.remove();
            reindexCourts();
        }

                        function handleSportSelectChange(selectEl) {
            const wrapper = selectEl.closest('.col-md-3');
            const customInput = wrapper.querySelector('.court-custom-sport');
            const hiddenInput = wrapper.querySelector('.court-sport-hidden');

            if (selectEl.value === "__other__") {
                customInput.classList.remove('d-none');
                customInput.setAttribute('required', 'required');

                // Replace previous listener to avoid stacking
                customInput.oninput = function () {
                    hiddenInput.value = this.value.trim();
                };

                hiddenInput.value = customInput.value.trim();
            } else {
                customInput.classList.add('d-none');
                customInput.removeAttribute('required');
                customInput.value = "";

                hiddenInput.value = selectEl.value;
            }
        }
                document.querySelector("form").addEventListener("submit", function () {
            document.querySelectorAll(".court-group").forEach(group => {
                const select = group.querySelector(".court-sport-select");
                const customInput = group.querySelector(".court-custom-sport");
                const hiddenInput = group.querySelector(".court-sport-hidden");

                if (select.value === "__other__") {
                    hiddenInput.value = customInput.value.trim();
                } else {
                    hiddenInput.value = select.value;
                }
            });
        });

    </script>
}
